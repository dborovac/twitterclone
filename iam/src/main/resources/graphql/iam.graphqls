extend schema @link(url: "https://specs.apollo.dev/federation/v2.0", import: ["@key", "@extends", "@external"])

type Query {
    getUserById(userId: String!): User!
    searchUsersByHandle(handle: String!): [User]!
    searchUsers(searchQuery: String!): [User]!
    getMyself: User!
}

type Mutation {
    register(request: RegistrationRequest!): GenericResponse!
    login(request: LoginRequest!): LoginResponse!
    follow(userId: String!): User!
    unfollow(userId: String!): User!
}

type User @key(fields: "id") {
    id: String!
    email: String!
    handle: String!
    firstName: String
    lastName: String
    birthday: String
    followers: [User]!
    followees: [User]!
}

type Tweet @key(fields: "id") @extends {
    id: String! @external
    postedBy: User!
    mentions: [User]!
    likedBy(pageRequest: PageRequest!): [User]!
    likedByMe: Boolean!
}

input PageRequest {
    first: Int!
    offset: Int!
}

type GenericResponse {
    success: Boolean!
}

input RegistrationRequest {
    email: String!,
    firstName: String,
    lastName: String,
    birthday: String,
    handle: String!,
    password: String!,
    matchingPassword: String!
}

input LoginRequest {
    email: String!,
    password: String!
}

type LoginResponse {
    token: String!
}
